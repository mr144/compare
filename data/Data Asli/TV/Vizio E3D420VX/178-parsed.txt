=========

nsubj(find-4, I-1)
aux(find-4, can-2)
neg(find-4, not-3)
root(ROOT-0, find-4)
det(issue-6, any-5)
dobj(find-4, issue-6)
det(TV-9, this-8)
prep_on(find-4, TV-9)

=========

nsubj(believe-6, Friends-1)
conj_and(Friends-1, family-3)
nsubj(believe-6, family-3)
aux(believe-6, do-4)
neg(believe-6, not-5)
root(ROOT-0, believe-6)
nsubj(watching-9, me-7)
dep(watching-9, quality-8)
xcomp(believe-6, watching-9)
dobj(watching-9, HD-10)
num(movies-13, 3D-12)
dobj(watching-9, movies-13)
conj_and(HD-10, movies-13)
dobj(paid-17, what-15)
rel(paid-17, what-15)
nsubj(paid-17, I-16)
dobj(watching-9, paid-17)
conj_and(HD-10, paid-17)
rcmod(HD-10, paid-17)
prepc_compared_to(paid-17, to-19)
advmod(expensive-21, more-20)
amod(sets-22, expensive-21)
pobj(paid-17, sets-22)

=========

det(quality-2, The-1)
nsubj(internet-9, quality-2)
det(color-5, the-4)
nsubj(crisp-7, color-5)
cop(crisp-7, is-6)
parataxis(internet-9, crisp-7)
root(ROOT-0, internet-9)
advmod(excellent-11, app-10)
acomp(internet-9, excellent-11)
mark(able-16, as-12)
nsubj(able-16, I-13)
cop(able-16, am-14)
advmod(able-16, also-15)
ccomp(excellent-11, able-16)
aux(access-18, to-17)
xcomp(able-16, access-18)
nn(movies-22, crackle.com-19)
conj_and(crackle.com-19, watch-21)
nn(movies-22, watch-21)
dobj(access-18, movies-22)
prep_for(access-18, free-24)

=========

dep(purchase-21, Question-1)
nsubj(ask-3, I-2)
ccomp(Question-1, ask-3)
dobj(ask-3, myself-4)
mark(need-9, if-6)
nsubj(need-9, I-7)
xsubj(buy-11, I-7)
aux(need-9, would-8)
advcl(ask-3, need-9)
aux(buy-11, to-10)
xcomp(need-9, buy-11)
det(TV-13, another-12)
dobj(buy-11, TV-13)
det(features-16, these-15)
prep_with(buy-11, features-16)
dobj(purchase-21, what-18)
aux(purchase-21, would-19)
nsubj(purchase-21, I-20)
root(ROOT-0, purchase-21)

=========

dep(one-3, Definitely-1)
det(one-3, this-2)
root(ROOT-0, one-3)

=========

nsubj(thinking-4, I-1)
aux(thinking-4, am-2)
advmod(thinking-4, even-3)
root(ROOT-0, thinking-4)
prepc_of(thinking-4, replacing-6)
poss(TV-9, my-7)
nn(TV-9, bedroom-8)
dobj(replacing-6, TV-9)
det(E3D42VX-13, another-11)
nn(E3D42VX-13, Vizio-12)
prep_with(replacing-6, E3D42VX-13)

