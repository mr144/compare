=========

nsubj(received-3, I-1)
advmod(received-3, just-2)
root(ROOT-0, received-3)
det(TV-5, this-4)
dobj(received-3, TV-5)
mark(excellent-11, although-7)
nn(quality-9, picture-8)
nsubj(excellent-11, quality-9)
cop(excellent-11, is-10)
advcl(due-26, excellent-11)
amod(scenes-14, bright-13)
prep_in(excellent-11, scenes-14)
prep_in(excellent-11, pictures-16)
conj_and(scenes-14, pictures-16)
det(quality-19, the-18)
nsubj(due-26, quality-19)
nn(scenes-22, dim-21)
prep_of(quality-19, scenes-22)
cop(due-26, is-23)
advmod(due-26, very-24)
dep(due-26, poor-25)
conj_and(received-3, due-26)
det(problem-30, the-28)
nn(problem-30, flashlight-29)
prep_to(due-26, problem-30)

=========

num(corners-2, Three-1)
nsubj(leaking-11, corners-2)
det(spot-5, a-4)
conj_and(corners-2, spot-5)
nsubj(leaking-11, spot-5)
det(side-9, the-7)
amod(side-9, left-8)
prep_on(spot-5, side-9)
aux(leaking-11, are-10)
root(ROOT-0, leaking-11)
advmod(back-light-14, much-12)
advmod(back-light-14, more-13)
acomp(leaking-11, back-light-14)
det(picture-17, the-16)
prep_into(back-light-14, picture-17)

=========

det(effect-2, This-1)
nsubj(uneven-5, effect-2)
cop(uneven-5, is-3)
advmod(uneven-5, very-4)
root(ROOT-0, uneven-5)
neg(uneven-5, not-7)
det(corner-10, every-9)
prep_in(uneven-5, corner-10)
prep_in(uneven-5, edge-12)
conj_or(corner-10, edge-12)

=========

nsubj(returning-4, I-1)
aux(returning-4, will-2)
aux(returning-4, be-3)
root(ROOT-0, returning-4)
det(TV-6, this-5)
dobj(returning-4, TV-6)

=========

nsubj(undecided-4, I-1)
cop(undecided-4, am-2)
advmod(undecided-4, just-3)
root(ROOT-0, undecided-4)
complm(get-8, whether-6)
aux(get-8, to-7)
prepc_on(undecided-4, get-8)
det(model-11, the-9)
amod(model-11, same-10)
dobj(get-8, model-11)
prepc_on(undecided-4, try-13)
conj_or(get-8, try-13)
det(brand-16, a-14)
amod(brand-16, different-15)
dobj(try-13, brand-16)

=========

nsubj(slow-8, Response-1)
nn(remote-4, TV-3)
prep_to(Response-1, remote-4)
cop(slow-8, is-5)
advmod(slow-8, often-6)
advmod(slow-8, very-7)
root(ROOT-0, slow-8)
nsubj(attempted-12, I-10)
xsubj(contact-14, I-10)
aux(attempted-12, have-11)
parataxis(slow-8, attempted-12)
aux(contact-14, to-13)
xcomp(attempted-12, contact-14)
amod(support-17, sharp-15)
nn(support-17, tech-16)
dobj(contact-14, support-17)
advmod(far-20, so-19)
dobj(contact-14, far-20)
advmod(support-17, far-20)
conj_and(support-17, far-20)
det(response-22, no-21)
dobj(contact-14, response-22)
conj_and(support-17, response-22)

=========

det(PILOT-3, The-1)
nn(PILOT-3, shipper-2)
nsubj(disaster-7, PILOT-3)
cop(disaster-7, was-4)
det(disaster-7, a-5)
amod(disaster-7, total-6)
root(ROOT-0, disaster-7)

=========

nsubj(took-2, It-1)
root(ROOT-0, took-2)
num(times-4, three-3)
dobj(took-2, times-4)
aux(get-6, to-5)
xcomp(took-2, get-6)
det(TV-8, the-7)
dobj(get-6, TV-8)
partmod(TV-8, delivered-9)

=========

nsubj(attempt-2, 1st-1)
root(ROOT-0, attempt-2)
nsubj(scheduled-4, they-3)
nsubj(called-11, they-3)
ccomp(attempt-2, scheduled-4)
det(time-6, a-5)
dobj(scheduled-4, time-6)
number(5-9, 1-7)
dep(5-9, to-8)
num(time-6, 5-9)
ccomp(attempt-2, called-11)
conj_and(scheduled-4, called-11)
det(day-13, the-12)
dobj(called-11, day-13)
prep_of(day-13, schedule-15)
dep(called-11, deliver-16)
prep_at(deliver-16, 12-18)
aux(cancel-20, to-19)
xcomp(deliver-16, cancel-20)
nsubj(make-25, TV-22)
aux(make-25, did-23)
neg(make-25, not-24)
parataxis(cancel-20, make-25)
dobj(make-25, it-26)
prep_on(make-25, truck-28)

=========

amod(attempt-2, 2nd-1)
dobj(showed-4, attempt-2)
nsubj(called-8, attempt-2)
nsubj(showed-4, they-3)
rcmod(attempt-2, showed-4)
advmod(showed-4, up-5)
advmod(showed-4, even-7)
conj_or(up-5, even-7)
root(ROOT-0, called-8)

=========

amod(attempt-3, successful-2)
prep_final(delivering-10, attempt-3)
nsubj(delivering-10, they-5)
aux(delivering-10, were-6)
num(hr-8, 1-7)
npadvmod(late-9, hr-8)
advmod(delivering-10, late-9)
root(ROOT-0, delivering-10)

=========

nsubj(offer-4, Driver-1)
xsubj(unpack-6, Driver-1)
aux(offer-4, did-2)
neg(offer-4, not-3)
root(ROOT-0, offer-4)
aux(unpack-6, to-5)
xcomp(offer-4, unpack-6)
xcomp(offer-4, test-8)
conj_and(unpack-6, test-8)
dobj(unpack-6, TV-9)
mark(supposed-13, as-10)
nsubjpass(supposed-13, he-11)
xsubj(to-14, he-11)
auxpass(supposed-13, was-12)
advcl(unpack-6, supposed-13)
xcomp(supposed-13, to-14)

