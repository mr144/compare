=========

det(6100-2, This-1)
nsubj(appears-3, 6100-2)
xsubj(TV-9, 6100-2)
root(ROOT-0, appears-3)
aux(TV-9, to-4)
cop(TV-9, be-5)
det(TV-9, a-6)
dep(looking-8, great-7)
amod(TV-9, looking-8)
xcomp(appears-3, TV-9)
advmod(TV-9, especially-11)
det(price-14, the-13)
prep_for(TV-9, price-14)

=========

det(drawback-3, The-1)
amod(drawback-3, main-2)
nsubj(finding-11, drawback-3)
det(TV-8, the-5)
nn(TV-8, Samsung-6)
amod(TV-8, smart-7)
prep_of(drawback-3, TV-8)
aux(finding-11, has-9)
aux(finding-11, been-10)
root(ROOT-0, finding-11)
det(keyboard-14, a-12)
amod(keyboard-14, compatible-13)
dobj(finding-11, keyboard-14)
mark(have-25, since-15)
det(remote-17, the-16)
nsubj(comes-19, remote-17)
nsubj(have-25, remote-17)
rcmod(remote-17, comes-19)
det(UN40ES6100-23, the-21)
amod(UN40ES6100-23, samsung-22)
prep_with(comes-19, UN40ES6100-23)
aux(have-25, would-24)
advcl(finding-11, have-25)
nsubj(enter-28, you-26)
aux(enter-28, to-27)
ccomp(have-25, enter-28)
xcomp(have-25, enter-28)
dobj(enter-28, information-29)
advmod(slowly-31, very-30)
advmod(enter-28, slowly-31)
dep(slowly-31, using-32)
det(motions-35, a-33)
amod(motions-35, few-34)
dobj(using-32, motions-35)
aux(add-38, to-36)
advmod(add-38, even-37)
xcomp(using-32, add-38)
det(character-40, a-39)
dobj(add-38, character-40)
nsubj(frustrating-44, character-40)
cop(frustrating-44, is-42)
advmod(frustrating-44, very-43)
rcmod(character-40, frustrating-44)

=========

csubj(take-5, Writing-1)
det(email-3, an-2)
dobj(Writing-1, email-3)
aux(take-5, could-4)
root(ROOT-0, take-5)
dobj(take-5, hours-6)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
=========

mark(have-3, If-1)
nsubj(have-3, you-2)
nsubjpass(frustrated-12, you-2)
advcl(are-21, have-3)
det(TV-6, a-4)
amod(TV-6, smart-5)
dobj(have-3, TV-6)
det(USB-9, a-8)
prep_with(TV-6, USB-9)
auxpass(frustrated-12, are-11)
conj_and(have-3, frustrated-12)
advcl(are-21, frustrated-12)
advmod(frustrated-12, then-13)
dep(have-3, check-14)
det(K400-17, the-15)
nn(K400-17, Logitech-16)
dobj(check-14, K400-17)
prt(check-14, out-18)
nsubj(are-21, chances-20)
root(ROOT-0, are-21)
nsubj(able-25, you-22)
aux(able-25, may-23)
cop(able-25, be-24)
ccomp(are-21, able-25)
aux(use-27, to-26)
xcomp(able-25, use-27)
det(keyboard-30, this-28)
amod(keyboard-30, wireless-29)
dobj(use-27, keyboard-30)
advmod(use-27, also-31)

=========

nsubj(able-3, I-1)
cop(able-3, was-2)
root(ROOT-0, able-3)
aux(pick-5, to-4)
xcomp(able-3, pick-5)
dobj(pick-5, it-6)
prt(pick-5, up-7)
nn(Mart-10, Wall-9)
prep_at(pick-5, Mart-10)
quantmod(40.00-13, under-12)
prep_for(Mart-10, 40.00-13)

=========

advmod(turn-2, Just-1)
dep(pull-8, turn-2)
poss(TV-5, your-4)
prep_on(turn-2, TV-5)
advmod(pull-8, then-7)
root(ROOT-0, pull-8)
det(tabs-11, the-9)
num(tabs-11, 2-10)
dobj(pull-8, tabs-11)
prt(pull-8, out-12)
amod(batteries-15, activate-14)
prep_to(pull-8, batteries-15)
prep_on(batteries-15, back-17)
prep_of(back-17, keyboard-19)
conj_and(pull-8, plug-21)
det(USB-25, the-23)
amod(USB-25, small-24)
prep_in(plug-21, USB-25)
det(receiver-29, the-27)
amod(receiver-29, USB-28)
prep_into(plug-21, receiver-29)
dep(receiver-29, is-31)
det(extender-34, a-32)
nn(extender-34, range-33)
nsubj(is-31, extender-34)
conj_and(pull-8, plug-37)
det(extender-41, the-38)
amod(extender-41, USB-39)
nn(extender-41, range-40)
dobj(plug-37, extender-41)
det(port-45, the-43)
amod(port-45, USB-44)
prep_into(plug-37, port-45)
prep_in(port-45, back-47)
poss(TV-50, your-49)
prep_of(back-47, TV-50)
nsubj(off-55, you-52)
nsubj(running-57, you-52)
aux(off-55, should-53)
cop(off-55, be-54)
conj_and(pull-8, off-55)
conj_and(pull-8, running-57)
conj_and(off-55, running-57)

=========

root(ROOT-0, Enjoy-1)

=========

nn(3:16-2, John-1)
root(ROOT-0, 3:16-2)

