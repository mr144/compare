=========

nsubj(able-5, I-1)
nsubj(adjust-13, I-1)
aux(able-5, have-2)
neg(able-5, not-3)
cop(able-5, been-4)
root(ROOT-0, able-5)
aux(turn-7, to-6)
xcomp(able-5, turn-7)
det(TV-10, the-9)
prep_on(turn-7, TV-10)
aux(adjust-13, will-12)
conj_and(able-5, adjust-13)
dobj(adjust-13, rating-14)
dobj(adjust-13, product-16)
conj_and(rating-14, product-16)
mark(get-19, once-17)
nsubj(get-19, I-18)
advcl(adjust-13, get-19)
det(chance-21, a-20)
nsubj(do-23, chance-21)
aux(do-23, to-22)
xcomp(get-19, do-23)
advmod(do-23, so-24)

=========

advmod(worse-8, However-1)
poss(Shipping-6, Amazon-3)
nn(Shipping-6, Enhanced-5)
nsubj(worse-8, Shipping-6)
cop(worse-8, is-7)
root(ROOT-0, worse-8)
advmod(Buy-11, then-9)
advmod(Buy-11, Best-10)
ccomp(worse-8, Buy-11)
dobj(Buy-11, 's-12)
dobj(Buy-11, any-14)
conj_or('s-12, any-14)
det(stores-18, the-16)
amod(stores-18, local-17)
prep_of(any-14, stores-18)
nsubj(deliver-23, who-20)
aux(deliver-23, will-21)
advmod(deliver-23, actually-22)
rcmod(stores-18, deliver-23)
det(product-25, the-24)
dobj(deliver-23, product-25)
det(room-28, the-27)
prep_to(deliver-23, room-28)
nsubj(need-30, you-29)
dep(Buy-11, need-30)
det(TV-32, the-31)
dobj(need-30, TV-32)
ccomp(worse-8, help-34)
conj_and(Buy-11, help-34)
prepc_with(help-34, putting-36)
dobj(putting-36, it-37)
det(stand-40, the-39)
prep_on(putting-36, stand-40)

=========

nn(Freight-2, Pilot-1)
nsubjpass(used-4, Freight-2)
xsubj(deliver-8, Freight-2)
auxpass(used-4, was-3)
root(ROOT-0, used-4)
agent(used-4, Amazon-6)
aux(deliver-8, to-7)
xcomp(used-4, deliver-8)
det(product-10, this-9)
dobj(deliver-8, product-10)
nsubj(uses-13, Pilot-12)
conj_and(used-4, uses-13)
dobj(uses-13, subcontractors-14)
nsubj(drop-18, subcontractors-14)
aux(drop-18, will-16)
advmod(drop-18, only-17)
rcmod(subcontractors-14, drop-18)
prt(drop-18, off-19)
det(TV-21, the-20)
dobj(drop-18, TV-21)
det(floor-25, the-23)
amod(floor-25, main-24)
prep_on(TV-21, floor-25)
det(premesis-28, the-27)
prep_of(floor-25, premesis-28)

=========

nsubj(assist-4, The-1)
nsubj(plug-14, The-1)
xsubj(determine-19, The-1)
aux(assist-4, would-2)
neg(assist-4, not-3)
root(ROOT-0, assist-4)
prepc_in(assist-4, getting-6)
dobj(getting-6, it-7)
det(stand-10, the-9)
prep_on(getting-6, stand-10)
aux(plug-14, did-12)
neg(plug-14, not-13)
conj_and(assist-4, plug-14)
det(TV-16, the-15)
dobj(plug-14, TV-16)
prt(plug-14, in-17)
aux(determine-19, to-18)
xcomp(plug-14, determine-19)
complm(works-22, whether-20)
nsubj(works-22, it-21)
ccomp(determine-19, works-22)

=========

nsubj(deliver-4, Pilot-1)
aux(deliver-4, would-2)
neg(deliver-4, not-3)
root(ROOT-0, deliver-4)
det(TV-6, the-5)
dobj(deliver-4, TV-6)
det(basement-9, the-8)
prep_to(deliver-4, basement-9)
advmod(needed-12, where-10)
nsubj(needed-12, I-11)
advcl(deliver-4, needed-12)
nsubj(had-16, it-13)
xsubj(contact-18, it-13)
conj_and(it-13, I-15)
nsubj(had-16, I-15)
xsubj(contact-18, I-15)
ccomp(needed-12, had-16)
aux(contact-18, to-17)
xcomp(had-16, contact-18)
dobj(contact-18, Amazon-19)
nsubj(had-21, Amazon-19)
rcmod(Amazon-19, had-21)
aux(contact-23, to-22)
xcomp(had-21, contact-23)
dobj(contact-23, Pilot-24)
nsubj(got-30, Pilot-24)
num(minutes-29, 45-28)
prep_after(got-30, minutes-29)
rcmod(Pilot-24, got-30)
det(guys-32, the-31)
dobj(got-30, guys-32)
aux(take-34, to-33)
xcomp(got-30, take-34)
det(box\/TV-36, the-35)
dobj(take-34, box\/TV-36)
det(basement-39, the-38)
prep_to(take-34, basement-39)

=========

nsubj(left-2, They-1)
nsubj(packed-9, They-1)
nsubj(left-14, They-1)
root(ROOT-0, left-2)
det(TV-4, the-3)
dobj(left-2, TV-4)
det(floor-7, the-6)
prep_on(left-2, floor-7)
conj_and(left-2, packed-9)
prt(packed-9, up-10)
det(box-12, the-11)
dobj(packed-9, box-12)
conj_and(left-2, left-14)

=========

nsubj(have-3, I-1)
xsubj(find-5, I-1)
advmod(have-3, now-2)
root(ROOT-0, have-3)
aux(find-5, to-4)
xcomp(have-3, find-5)
det(way-7, a-6)
dobj(find-5, way-7)
aux(set-9, to-8)
infmod(way-7, set-9)
prt(set-9, up-10)
det(TV-12, the-11)
dobj(set-9, TV-12)
det(stand-15, the-14)
prep_on(TV-12, stand-15)
mark(breaks-19, if-17)
nsubj(breaks-19, it-18)
advcl(returning-24, breaks-19)
advmod(returning-24, then-21)
nsubj(returning-24, I-22)
aux(returning-24, am-23)
parataxis(have-3, returning-24)
det(product-26, the-25)
dobj(returning-24, product-26)

