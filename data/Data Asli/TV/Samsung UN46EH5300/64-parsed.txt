=========

nsubj(fan-6, I-1)
aux(fan-6, have-2)
advmod(fan-6, long-3)
cop(fan-6, been-4)
det(fan-6, a-5)
root(ROOT-0, fan-6)
prep_of(fan-6, Samsung-8)
amod(exception-12, big-11)
prep_with(fan-6, exception-12)
det(TV-18, an-14)
amod(TV-18, early-15)
nn(TV-18, DLP-16)
nn(TV-18, Console-17)
prep_of(exception-12, TV-18)
dep(spent-21, which-19)
nsubj(spent-21, I-20)
dep(fan-6, spent-21)
dobj(spent-21, thousands-22)
prep(spent-21, for-23)
nsubj(failed-26, which-25)
dep(fan-6, failed-26)
conj_and(spent-21, failed-26)
advmod(failed-26, miserably-27)
det(problem-32, an-30)
nn(problem-32, engineering-31)
prep_due_to(failed-26, problem-32)
advmod(created-34, jointly-33)
partmod(problem-32, created-34)
agent(created-34, Samsung-36)
det(maker-41, the-38)
nn(maker-41, DLP-39)
nn(maker-41, chip-40)
prep_due_to(failed-26, maker-41)
conj_and(problem-32, maker-41)
nn(Instruments-44, Texas-43)
appos(maker-41, Instruments-44)
det(conflict-48, a-47)
prep_in(maker-41, conflict-48)
amod(requirements-52, proper-50)
amod(requirements-52, cooling-51)
prep_over(conflict-48, requirements-52)

=========

nsubj(ended-2, I-1)
root(ROOT-0, ended-2)
prt(ended-2, up-3)
xcomp(ended-2, sending-4)
det(&#34;-7, a-5)
amod(&#34;-7, huge-6)
iobj(sending-4, &#34;-7)
nn(TV-12, Darth-8)
nn(TV-12, Vader-9)
nn(TV-12, &#34;-10)
nn(TV-12, DLP-11)
dobj(sending-4, TV-12)
det(junkyard-15, the-14)
prep_to(TV-12, junkyard-15)
amod(Buy-18, Best-17)
prep_via(junkyard-15, Buy-18)
advmod(clear-22, when-19)
nsubj(clear-22, it-20)
cop(clear-22, was-21)
advcl(sending-4, clear-22)
complm(going-30, that-23)
det(chip-27, the-24)
amod(chip-27, needed-25)
nn(chip-27, replacement-26)
nsubj(going-30, chip-27)
xsubj(manufactured-33, chip-27)
aux(going-30, was-28)
neg(going-30, not-29)
ccomp(clear-22, going-30)
aux(manufactured-33, to-31)
auxpass(manufactured-33, be-32)
xcomp(going-30, manufactured-33)
xcomp(going-30, provided-35)
conj_or(manufactured-33, provided-35)
agent(manufactured-33, anyone-37)

=========

advmod(taken-7, IMHO-1)
poss(regulators-4, our-2)
nn(regulators-4, government-3)
nsubj(taken-7, regulators-4)
aux(taken-7, should-5)
aux(taken-7, have-6)
root(ROOT-0, taken-7)
det(Samsung-10, both-9)
prep_on(taken-7, Samsung-10)
det(maker-16, the-12)
advmod(defunct-14, now-13)
amod(maker-16, defunct-14)
nn(maker-16, chip-15)
prep_on(taken-7, maker-16)
conj_and(Samsung-10, maker-16)

=========

det(set-2, This-1)
nsubj(represents-3, set-2)
root(ROOT-0, represents-3)
det(purchase-6, the-4)
amod(purchase-6, fifth-5)
dobj(represents-3, purchase-6)
dobj(made-13, purchase-6)
nn(technology-10, Samsung-8)
nn(technology-10, TFT\/LED-9)
prep_of(purchase-6, technology-10)
nsubj(made-13, I-11)
aux(made-13, have-12)
rcmod(purchase-6, made-13)
det(years-18, the-15)
amod(years-18, past-16)
amod(years-18, few-17)
prep_in(made-13, years-18)

=========

nsubj(purchase-5, I-1)
nsubj(up-sized-19, I-1)
advmod(purchase-5, purposefully-2)
aux(purchase-5, did-3)
neg(purchase-5, not-4)
root(ROOT-0, purchase-5)
det(unit-13, the-6)
advmod(sophisticated-8, most-7)
amod(unit-13, sophisticated-8)
dep(sophisticated-8, 3D-10)
amod(unit-13, capable-12)
dobj(purchase-5, unit-13)
poss(bedroom-16, my-15)
prep_for(unit-13, bedroom-16)
conj_but(purchase-5, up-sized-19)
number(&#34;-25, 32-21)
number(&#34;-25, &#34;-22)
dep(&#34;-25, to-23)
number(&#34;-25, 40-24)
prep_from(up-sized-19, &#34;-25)
advmod(failed-33, when-26)
det(CRT-29, a-27)
amod(CRT-29, small-28)
nsubj(failed-33, CRT-29)
partmod(CRT-29, based-30)
dobj(based-30, TV-31)
advmod(based-30, finally-32)
advcl(up-sized-19, failed-33)
poss(bedroom-37, our-35)
nn(bedroom-37, guest-36)
prep_in(failed-33, bedroom-37)

=========

det(unit-4, The-1)
number(&#34;-3, 32-2)
num(unit-4, &#34;-3)
nsubj(TV-10, unit-4)
nsubj(migrated-15, unit-4)
cop(TV-10, is-6)
det(TV-10, the-7)
amod(TV-10, oldest-8)
amod(TV-10, Samsung-9)
rcmod(unit-4, TV-10)
dobj(own-12, TV-10)
nsubj(own-12, I-11)
rcmod(TV-10, own-12)
aux(migrated-15, has-13)
advmod(migrated-15, now-14)
root(ROOT-0, migrated-15)
det(room-19, the-17)
nn(room-19, guest-18)
prep_to(migrated-15, room-19)
det(TV-29, the-22)
amod(TV-29, new-23)
num(TV-29, 40-24)
num(TV-29, &#34;-25)
num(TV-29, &#34;-26)
nn(TV-29, Smart-27)
num(TV-29, &#34;-28)
nsubj(replaced-31, TV-29)
aux(replaced-31, has-30)
conj_and(migrated-15, replaced-31)
dobj(replaced-31, it-32)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
=========

nsubj(exploring-4, I-1)
aux(exploring-4, am-2)
advmod(exploring-4, still-3)
root(ROOT-0, exploring-4)
det(apps-7, the-5)
amod(apps-7, available-6)
dobj(exploring-4, apps-7)
dobj(provides-15, apps-7)
dobj(exploring-4, options-9)
conj_and(apps-7, options-9)
dobj(provides-15, options-9)
det(&#34;-14, the-10)
num(&#34;-14, &#34;-11)
nn(&#34;-14, Smart-12)
nn(&#34;-14, TV-13)
nsubj(provides-15, &#34;-14)
rcmod(apps-7, provides-15)

=========

nsubj(able-3, I-1)
cop(able-3, am-2)
root(ROOT-0, able-3)
aux(see-5, to-4)
xcomp(able-3, see-5)
dobj(see-5, photos-6)
xcomp(able-3, listen-8)
conj_and(see-5, listen-8)
num(tracks-11, MP3-10)
prep_to(listen-8, tracks-11)
partmod(tracks-11, stored-12)
det(drive-17, a-14)
nn(drive-17, NAS-15)
amod(drive-17, hard-16)
prep_on(stored-12, drive-17)
partmod(drive-17, connected-18)
prep_via(connected-18, USB-20)
poss(router-23, my-22)
prep_to(connected-18, router-23)

=========

det(Samsung-2, The-1)
nsubj(provided-3, Samsung-2)
root(ROOT-0, provided-3)
nsubj(sucks-10, UI-4)
det(system-9, the-6)
nn(system-9, NAS-7)
nn(system-9, file-8)
prep_for(UI-4, system-9)
ccomp(provided-3, sucks-10)
nsubj(works-14, it-13)
conj_but(provided-3, works-14)
dep(works-14, slowly-16)
prep_in(slowly-16, part-19)
det(connection-24, the-22)
amod(connection-24, USB-23)
prep_due_to(part-19, connection-24)
det(drive-28, the-26)
nn(drive-28, NAS-27)
prep_between(connection-24, drive-28)
poss(router-31, my-30)
prep_between(connection-24, router-31)
conj_and(drive-28, router-31)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
=========

nsubj(set-3, I-1)
advmod(set-3, immediately-2)
root(ROOT-0, set-3)
prt(set-3, up-4)
dobj(set-3, some-5)
det(Apps-8, the-7)
prep_of(some-5, Apps-8)
prep_like(set-3, TED-11)
prep_for(set-3, example-13)
poss(account-19, my-16)
nn(account-19, Pandora-17)
num(account-19, One-18)
prep_for(set-3, account-19)
conj_and(example-13, account-19)

=========

nsubj(not-10, The-1)
partmod(The-1, built-2)
prep_in(built-2, speakers-4)
advmod(expected-7, as-6)
amod(The-1, expected-7)
cop(not-10, are-9)
root(ROOT-0, not-10)
dobj(prepared-14, what-11)
nsubj(prepared-14, I-12)
cop(prepared-14, am-13)
ccomp(not-10, prepared-14)
aux(live-16, to-15)
xcomp(prepared-14, live-16)
amod(term-19, long-18)
prep_with(live-16, term-19)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
=========

nsubj(set-4, I-1)
advmod(set-4, also-2)
advmod(set-4, immediately-3)
root(ROOT-0, set-4)
det(controls-7, the-5)
nn(controls-7, picture-6)
dobj(set-4, controls-7)
det(room-13, the-9)
advmod(darkened-11, usually-10)
amod(room-13, darkened-11)
nn(room-13, viewing-12)
prep_for(set-4, room-13)
advmod(sits-17, where-14)
det(TV-16, the-15)
nsubj(sits-17, TV-16)
advcl(set-4, sits-17)

=========

preconj(wife-3, Both-1)
poss(wife-3, my-2)
nsubj(beginning-7, wife-3)
xsubj(have-9, wife-3)
conj_and(wife-3, I-5)
nsubj(beginning-7, I-5)
xsubj(have-9, I-5)
aux(beginning-7, are-6)
root(ROOT-0, beginning-7)
aux(have-9, to-8)
xcomp(beginning-7, have-9)
dobj(have-9, issues-10)
prep_with(issues-10, cataracts-12)
dep(beginning-7, so-14)
det(screen-17, the-15)
amod(screen-17, larger-16)
nsubj(help-23, screen-17)
amod(settings-22, more-19)
amod(settings-22, intense-20)
nn(settings-22, color-21)
conj_and(screen-17, settings-22)
nsubj(help-23, settings-22)
ccomp(beginning-7, help-23)

=========

nsubj(sure-5, I-1)
cop(sure-5, am-2)
advmod(sure-5, still-3)
neg(sure-5, not-4)
root(ROOT-0, sure-5)
det(speed-11, the-7)
amod(speed-11, so-called-8)
num(speed-11, 120-9)
amod(speed-11, scan-10)
prep_about(sure-5, speed-11)
det(set-14, this-13)
prep_of(speed-11, set-14)
nsubj(acts-16, set-14)
rcmod(set-14, acts-16)
dobj(acts-16, more-17)
det(scan-23, an-19)
amod(scan-23, interpolated-20)
num(scan-23, 60-21)
nn(scan-23, cycle-22)
prep_like(acts-16, scan-23)
nsubj(adequate-36, scan-23)
det(120-27, a-25)
amod(120-27, true-26)
prep_than(scan-23, 120-27)
prep_for(adequate-36, me-31)
aux(adequate-36, would-32)
cop(adequate-36, be-33)
advmod(than-35, more-34)
advmod(adequate-36, than-35)
rcmod(scan-23, adequate-36)

=========

det(phosphors-2, The-1)
nsubj(need-3, phosphors-2)
root(ROOT-0, need-3)
det(week-5, a-4)
nsubj(burn-10, week-5)
num(&#34;-9, two-7)
dep(&#34;-9, to-8)
conj_or(week-5, &#34;-9)
nsubj(burn-10, &#34;-9)
ccomp(need-3, burn-10)
prep_in(burn-10, &#34;-12)
mark(tweak-17, before-13)
nsubj(tweak-17, I-14)
aux(tweak-17, can-15)
advmod(tweak-17, really-16)
advcl(burn-10, tweak-17)
det(picture-19, the-18)
dobj(tweak-17, picture-19)
advmod(far-23, so-22)
advmod(satisfactory-26, far-23)
nsubj(satisfactory-26, it-24)
cop(satisfactory-26, is-25)
conj_but(need-3, satisfactory-26)

=========

nsubj(plan-2, I-1)
xsubj(update-4, I-1)
root(ROOT-0, plan-2)
aux(update-4, to-3)
xcomp(plan-2, update-4)
dobj(update-4, this-5)
iobj(update-4, this-5)
det(little-7, a-6)
dobj(update-4, little-7)
dep(this-5, little-7)
advmod(passed-12, when-8)
det(time-10, some-9)
nsubj(passed-12, time-10)
aux(passed-12, has-11)
advcl(update-4, passed-12)

