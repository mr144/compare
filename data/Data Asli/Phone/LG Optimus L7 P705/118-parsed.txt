Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
=========

root(ROOT-0, Design-1)
det(phone-4, The-3)
nsubj(flat-6, phone-4)
cop(flat-6, is-5)
dep(Design-1, flat-6)
dep(Design-1, square-8)
advmod(flat-6, square-8)
conj_and(flat-6, square-8)
nsubj(good-11, which-9)
cop(good-11, is-10)
ccomp(flat-6, good-11)
mark(slips-14, because-12)
nsubj(slips-14, it-13)
advcl(good-11, slips-14)
poss(pocket-17, your-16)
prep_in(slips-14, pocket-17)
advmod(grippy-26, comfortably-18)
det(back-21, the-20)
nsubj(grippy-26, back-21)
cop(grippy-26, is-22)
neg(grippy-26, not-23)
advmod(grippy-26, as-24)
rcmod(pocket-17, grippy-26)
mark(seems-30, as-28)
nsubj(seems-30, it-29)
advcl(grippy-26, seems-30)
nsubj(be-33, it-31)
aux(be-33, might-32)
ccomp(seems-30, be-33)
det(case-36, A-35)
nsubj(solve-41, case-36)
conj_or(case-36, replacement-38)
nsubj(solve-41, replacement-38)
advmod(solve-41, back-39)
aux(solve-41, may-40)
parataxis(grippy-26, solve-41)
dobj(solve-41, this-42)
nsubjpass(used-46, I-44)
auxpass(used-46, am-45)
parataxis(slips-14, used-46)
det(back-49, the-48)
prep_to(used-46, back-49)
poss(Nexus-53, my-51)
amod(Nexus-53, Google-52)
prep_of(back-49, Nexus-53)
num(Nexus-53, 7-54)
mark(backing-59, with-55)
nsubj(backing-59, it-56)
cop(backing-59, is-57)
amod(backing-59, less-than-plastic-58)
advcl(used-46, backing-59)

=========

det(buttons-2, The-1)
nsubj(sit-5, buttons-2)
aux(sit-5, do-3)
neg(sit-5, not-4)
root(ROOT-0, sit-5)
prt(sit-5, out-6)
advmod(far-8, too-7)
advmod(sit-5, far-8)
advmod(enough-11, just-10)
advmod(identify-13, enough-11)
aux(identify-13, to-12)
parataxis(sit-5, identify-13)
parataxis(sit-5, press-15)
conj_and(identify-13, press-15)
advmod(needed-17, when-16)
advcl(identify-13, needed-17)

=========

det(battery-2, The-1)
nsubj(difficult-7, battery-2)
xsubj(remove-9, battery-2)
advmod(difficult-7, back-3)
cop(difficult-7, is-4)
det(little-6, a-5)
npadvmod(difficult-7, little-6)
root(ROOT-0, difficult-7)
aux(remove-9, to-8)
xcomp(difficult-7, remove-9)
det(tool-12, a-11)
prep_without(remove-9, tool-12)
prep_without(remove-9, fingernails-14)
conj_or(tool-12, fingernails-14)
mark(slide-19, as-15)
nsubj(slide-19, it-16)
aux(slide-19, does-17)
neg(slide-19, not-18)
advcl(difficult-7, slide-19)
prt(slide-19, off-20)
advmod(slide-19, rather-22)
prepc_than(slide-19, snapping-24)
prt(snapping-24, on-25)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
=========

expl(is-2, There-1)
root(ROOT-0, is-2)
advmod(is-2, also-3)
nsubj(is-2, software-4)
dobj(download-7, software-4)
nsubj(download-7, you-5)
aux(download-7, may-6)
rcmod(software-4, download-7)
prep_from(download-7, LG-9)
det(device-12, the-11)
prep_for(download-7, device-12)
aux(transfer-14, to-13)
infmod(device-12, transfer-14)
infmod(device-12, backup-16)
conj_and(transfer-14, backup-16)
dobj(transfer-14, data-17)

=========

root(ROOT-0, Specs-1)
appos(Specs-1, performance-3)
det(battery-6, The-5)
nsubj(robust-9, battery-6)
cop(robust-9, is-7)
advmod(robust-9, as-8)
dep(Specs-1, robust-9)
mark(expected-13, as-10)
aux(expected-13, to-11)
auxpass(expected-13, be-12)
advcl(robust-9, expected-13)
xcomp(robust-9, expected-13)
partmod(Specs-1, using-15)
dobj(using-15, apps-16)
amod(apps-16, texting-18)
amod(apps-16, such-20)
conj_and(texting-18, such-20)
nsubj(find-23, I-22)
dep(apps-16, find-23)
nsubj(need-27, I-24)
xsubj(charge-29, I-24)
advmod(need-27, really-25)
advmod(need-27, only-26)
ccomp(find-23, need-27)
aux(charge-29, to-28)
xcomp(need-27, charge-29)
det(day-32, every-30)
amod(day-32, other-31)
tmod(charge-29, day-32)
nsubj(problem-38, this-35)
cop(problem-38, is-36)
det(problem-38, no-37)
dep(apps-16, problem-38)
conj_but(find-23, problem-38)
mark(find-42, since-39)
nsubj(find-42, I-40)
advmod(find-42, rarely-41)
advcl(problem-38, find-42)
nsubj(lost-44, myself-43)
ccomp(find-42, lost-44)
det(wilderness-47, the-46)
prep_in(lost-44, wilderness-47)
det(week-50, a-49)
prep_for(Specs-1, week-50)

=========

amod(life-3, Actual-1)
nn(life-3, battery-2)
nsubj(varies-4, life-3)
root(ROOT-0, varies-4)
nsubj(running-10, user-6)
nsubj(connecting-12, user-6)
det(things-9, the-8)
conj_and(user-6, things-9)
nsubj(running-10, things-9)
prepc_per(varies-4, running-10)
prepc_per(varies-4, connecting-12)
conj_and(running-10, connecting-12)
prep_of(running-10, course-14)

=========

det(user-2, A-1)
nsubj(see-8, user-2)
amod(user-2, smart-3)
poss(battery-6, their-5)
prep_with(smart-3, battery-6)
aux(see-8, would-7)
root(ROOT-0, see-8)
dobj(see-8, days-9)
prep_on(days-9, standby-11)
advmod(much-15, surprisingly-13)
advmod(much-15, as-14)
advmod(days-9, much-15)
mark(turn-19, as-16)
nsubj(turn-19, I-17)
advmod(turn-19, personally-18)
ccomp(much-15, turn-19)
prt(turn-19, on-20)
prep_to(turn-19, mess-22)
dep(mess-22, around-23)
det(screen-26, the-25)
prep_with(mess-22, screen-26)
dep(screen-26, on-27)
dep(screen-26, Brightness-30)
dep(Brightness-30, at-31)
num(%-33, 28-32)
pobj(at-31, %-33)
advmod(clear-37, still-35)
advmod(clear-37, very-36)
amod(screen-26, clear-37)

=========

det(screen-2, The-1)
nsubj(get-4, screen-2)
aux(get-4, can-3)
root(ROOT-0, get-4)
nsubj(bright-6, VERY-5)
xcomp(get-4, bright-6)

=========

det(screen-2, the-1)
nsubj(fourth-5, screen-2)
cop(fourth-5, is-3)
det(fourth-5, the-4)
root(ROOT-0, fourth-5)
det(list-8, the-7)
prep_on(fourth-5, list-8)
prep_of(list-8, things-10)
nsubj(pull-12, things-10)
rcmod(things-10, pull-12)
dobj(pull-12, power-13)
poss(battery-16, my-15)
prep_to(pull-12, battery-16)

=========

det(items-3, The-1)
amod(items-3, top-2)
root(ROOT-0, items-3)
poss(phone-6, my-5)
prep_on(items-3, phone-6)
nn(Standby-9, Cell-8)
dep(items-3, Standby-9)
nn(System-12, Android-11)
appos(Standby-9, System-12)
nn(Idle-15, Phone-14)
appos(Standby-9, Idle-15)
appos(Standby-9, finally-17)
advmod(Idle-15, finally-17)
conj_and(Idle-15, finally-17)
det(Screen-19, the-18)
appos(Standby-9, Screen-19)
conj_and(Idle-15, Screen-19)

=========

det(devices-4, the-2)
amod(devices-4, other-3)
prep_in(used-7, devices-4)
nsubj(used-7, I-5)
aux(used-7, have-6)
ccomp(item-20, used-7)
dep(tablets-10, Primarily-9)
dep(used-7, tablets-10)
det(screen-14, the-13)
nsubj(item-20, screen-14)
cop(item-20, is-15)
advmod(item-20, usually-16)
det(item-20, the-17)
amod(item-20, top-18)
amod(item-20, pulling-19)
root(ROOT-0, item-20)
amod(leaps-24, grand-23)
prep_by(item-20, leaps-24)

Sentence skipped: no PCFG fallback.
SENTENCE_SKIPPED_OR_UNPARSABLE
=========

partmod(performs-11, Installing-1)
nn(Launcher-3, Nova-2)
dobj(Installing-1, Launcher-3)
prep(Installing-1, on-4)
pcomp(on-4, as-5)
poss(home-8, my-6)
nn(home-8, default-7)
prep_as(on-4, home-8)
nsubj(performs-11, it-10)
root(ROOT-0, performs-11)
amod(lag-14, minimal-13)
prep_with(performs-11, lag-14)
mark(notice-18, though-16)
nsubj(notice-18, I-17)
advcl(performs-11, notice-18)
det(stutter-21, a-19)
amod(stutter-21, slight-20)
dobj(notice-18, stutter-21)
nn(transitions-24, screen-23)
prep_on(stutter-21, transitions-24)
dep(door-30, Primarily-26)
det(door-30, the-27)
num(door-30, &#34;-28)
nn(door-30, Swinging-29)
dep(transitions-24, door-30)
num(transition-32, &#34;-31)
dep(door-30, transition-32)

=========

det(launcher-3, The-1)
nn(launcher-3, default-2)
nsubj(launcher-13, launcher-3)
partmod(launcher-3, performed-4)
advmod(performed-4, well-5)
advmod(launcher-13, however-7)
det(ICS-12, an-9)
nn(ICS-12, LG-10)
nn(ICS-12, customized-11)
nsubj(launcher-13, ICS-12)
root(ROOT-0, launcher-13)

=========

root(ROOT-0, Nothing-1)
advmod(spectacular-3, too-2)
amod(Nothing-1, spectacular-3)
advmod(upgrade-7, hence-5)
det(upgrade-7, the-6)
appos(Nothing-1, upgrade-7)
nn(Launcher-10, Nova-9)
prep_to(upgrade-7, Launcher-10)

=========

nsubj(tested-9, Runs-1)
advmod(apps-3, most-2)
rcmod(Runs-1, apps-3)
dep(apps-3, without-4)
pobj(without-4, issue-5)
aux(tested-9, have-7)
neg(tested-9, not-8)
root(ROOT-0, tested-9)
amod(games-11, many-10)
dobj(tested-9, games-11)
prep_outside_of(tested-9, Osmos-14)
nsubj(proved-17, Osmos-14)
rcmod(Osmos-14, proved-17)
aux(make-19, to-18)
xcomp(proved-17, make-19)
det(stutter-22, the-20)
nn(stutter-22, game-21)
dobj(make-19, stutter-22)
nsubj(phone-30, It-24)
cop(phone-30, 's-25)
advmod(phone-30, definitely-26)
neg(phone-30, not-27)
det(phone-30, a-28)
nn(phone-30, gaming-29)
parataxis(tested-9, phone-30)

=========

prepc_depending_on(vary-9, on-2)
poss(carrier-4, your-3)
pobj(vary-9, carrier-4)
nsubj(vary-9, connection-6)
aux(vary-9, will-7)
advmod(vary-9, always-8)
ccomp(get-29, vary-9)
advmod(vary-9, however-11)
det(P705-13, the-12)
nsubj(gets-14, P705-13)
dep(vary-9, gets-14)
advmod(good-16, rather-15)
amod(connection-17, good-16)
dobj(gets-14, connection-17)
complm(found-21, that-18)
nsubj(found-21, I-19)
aux(found-21, have-20)
ccomp(gets-14, found-21)
advmod(far-23, so-22)
advmod(found-21, far-23)
prep_on(found-21, average-26)
nsubj(get-29, I-28)
root(ROOT-0, get-29)
amod(reception-31, better-30)
dobj(get-29, reception-31)
mark(did-34, than-32)
nsubj(did-34, I-33)
advcl(get-29, did-34)
prep_with(did-34, most-36)
poss(phones-40, my-38)
amod(phones-40, previous-39)
prep_of(most-36, phones-40)

=========

nsubj(terrible-4, WiFi-1)
cop(terrible-4, is-2)
neg(terrible-4, not-3)
ccomp(lose-9, terrible-4)
nsubj(lose-9, i-6)
nsubj(find-12, i-6)
aux(lose-9, do-7)
neg(lose-9, not-8)
root(ROOT-0, lose-9)
dobj(lose-9, signal-10)
conj_nor(lose-9, find-12)
complm(get-15, that-13)
nsubj(get-15, I-14)
ccomp(find-12, get-15)
amod(performance-17, better-16)
dobj(get-15, performance-17)
poss(Nexus-20, my-19)
prep_than(get-15, Nexus-20)
advmod(get-15, either-22)

=========

det(speaker-2, The-1)
nsubj(loud-6, speaker-2)
cop(loud-6, is-3)
neg(loud-6, not-4)
advmod(loud-6, terribly-5)
root(ROOT-0, loud-6)
nsubj(work-10, it-8)
xsubj(carry-14, it-8)
aux(work-10, would-9)
conj_but(loud-6, work-10)
advmod(enough-12, well-11)
advmod(work-10, enough-12)
aux(carry-14, to-13)
xcomp(work-10, carry-14)
prt(carry-14, out-15)
det(conversation-18, a-16)
amod(conversation-18, speakerphone-17)
dobj(carry-14, conversation-18)
advmod(well-20, as-19)
mwe(well-20, as-19)
advmod(carry-14, well-20)
mark(miss-25, as-21)
nsubj(miss-25, you-22)
aux(miss-25, will-23)
neg(miss-25, not-24)
ccomp(well-20, miss-25)
det(call-27, a-26)
nsubj(due-28, call-27)
xcomp(miss-25, due-28)
neg(hearing-31, not-30)
prepc_to(due-28, hearing-31)
dobj(hearing-31, it-32)

